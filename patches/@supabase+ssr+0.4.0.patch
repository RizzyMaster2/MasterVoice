diff --git a/node_modules/@supabase/ssr/dist/index.mjs b/node_modules/@supabase/ssr/dist/index.mjs
index c708a3e..f2c7a4e 100644
--- a/node_modules/@supabase/ssr/dist/index.mjs
+++ b/node_modules/@supabase/ssr/dist/index.mjs
@@ -1,5 +1,5 @@
 // node_modules/@supabase/supabase-js/dist/module/index.js
-var import_realtime_js = require("@supabase/realtime-js");
+// var import_realtime_js = require("@supabase/realtime-js");
 var import_functions_js = require("@supabase/functions-js");
 var import_storage_js = require("@supabase/storage-js");
 var import_postgrest_js = require("@supabase/postgrest-js");
@@ -21,7 +21,7 @@ var import_node_crypto = require("node:crypto");
   var import_node_url = require("node:url");
   var import_node_events = require("node:events");
 }
-var import_detect_node = require("detect-node");
+// var import_detect_node = require("detect-node");
 var StorageClient = class extends import_storage_js.StorageClient {
   constructor(url, headers = {}, fetch, path) {
     super(url, headers, fetch, path);
@@ -107,7 +107,7 @@ var SupabaseClient = class {
     this.realtime = null;
     this.realtimeUrl = `${this.supabaseUrl.replace(/^http/i, "ws")}/realtime/v1`;
     const isPlatform = this.supabaseUrl.includes(".supabase.co") || this.supabaseUrl.includes(".supabase.in");
-    if (isPlatform && (0, import_detect_node.isNode)() && process.version > "v16.15.0") {
+    if (isPlatform && typeof process !== 'undefined' && process.version > "v16.15.0") {
       this.realtime = this._initRealtime(this.realtimeUrl, {
         params: { apikey: this.supabaseKey }
       });
@@ -147,7 +147,7 @@ var SupabaseClient = class {
     };
     this.auth = this._initSupabaseAuthClient(authOptions);
     this.fetch = (0, import_gotrue_js.fetchWithAuth)(this.supabaseKey, this._getAccessToken.bind(this), this.fetch);
-    if (this.realtime) {
+    if (!this.realtime && typeof import_realtime_js !== 'undefined') {
       this._listenForAuthEvents();
     }
   }
@@ -213,7 +213,7 @@ var SupabaseClient = class {
   }
   _initRealtime(url, options) {
     var _a;
-    return new import_realtime_js.RealtimeClient(url, {
+    return new (_a = require("@supabase/realtime-js")) == null ? void 0 : _a.RealtimeClient(url, {
       ...options,
       logger: (kind, msg, data) => {
         var _a2;
@@ -221,7 +221,7 @@ var SupabaseClient = class {
         (_a2 = this.realtime) == null ? void 0 : _a2.log(kind, msg, data);
       }
     });
-  }
+  };
   _listenForAuthEvents() {
     let data = this.auth.onAuthStateChange((event, session) => {
       this._handleTokenChanged(event, "CLIENT", session);
